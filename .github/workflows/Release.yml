name: Build

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
        - os: ubuntu-latest
          output: SpotifyCli
        - os: windows-laest
          output: SpotifyCli.exe
        - os: macos-latest
          output: SpotifyCli
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Install dotnet warp
      run: dotnet tool install --global dotnet-warp --version 1.1.0
    - name: Install dependencies
      run: dotnet restore
    - name: Replace Version
      run: |
        echo "GITHUB_REF: $GITHUB_REF"
        echo "GITHUB_SHA: $GITHUB_SHA"
        if [[ "$GITHUB_REF" == *"refs/tags"* ]]; then
          BIN_VERSION="${GITHUB_REF##*/}"
        else
          BIN_VERSION="git:$GITHUB_SHA"
        fi
        echo "BIN_VERSION: $BIN_VERSION"
        sed "s/\".*\"/\"$BIN_VERSION\"/g" src/SpotifyCli.core/Version.cs > src/SpotifyCli.core/VersionInfo.cs
        rm Version.cs
      shell: bash
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    - name: Publish & Warp
      run: dotnet warp -o ${{ matrix.output }}
    - name: Archive production artifacts
      uses: actions/upload-artifact@v1
      with:
        name: SpotifyCli-${{ matrix.os }}
        path: ${{ matrix.output }}
  deploy-github:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@master
    - name: Rename binaries
      run: |
        cp SpotifyCli-macos-latest/SpotifyCli SpotifyCli-mac-x64
        cp SpotifyCli-ubuntu-latest/SpotifyCli SpotifyCli-linux-x64
        cp SpotifyCli-windows-latest/SpotifyCli.exe' SpotifyCli-win-x64.exe
    - name: Release To Github
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        prerelease: true
        files: |
          SpotifyCli-mac-x64
          SpotifyCli-linux-x64
          SpotifyCli-win-x64.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Release To Github
      uses: actions/upload-artifact@v2
      with:
        name: assets-for-download
        path: downloads
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}